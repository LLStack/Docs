(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{366:function(a,s,t){"use strict";t.r(s);var e=t(20),r=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"介绍"}},[a._v("介绍")]),a._v(" "),s("p",[a._v("官方支持网站：https://www.llstack.com/ols/")]),a._v(" "),s("p",[s("strong",[a._v("OLStack 社区容器版")]),a._v("，是基于 Docker 容器化编排的 OpenLiteSpeed 环境。性能比Nginx更胜一筹，基本兼容 Apache HTTPD 生态，主要是不支持自动加载 .htaccss 文件，该版本对操作系统环境没有限制，未来可以应用到非常多的场景中。")]),a._v(" "),s("p",[a._v("OpenLiteSpeed 是 LiteSpeed EnterPrise 的社区版本，相较 Nginx 很多扩展如 Brotli、nginx*-"),s("em",[a._v("cache")]),a._v("-*purge 等扩展，会因为更新的不及时导致对最新Stable版本的不支持，同时也没有企业级的保障。 而 OpenLiteSpeed 的组件有官方进行主要维护和更新，提供商用企业级的体验。")]),a._v(" "),s("p",[a._v("在性能上，LiteSpeed Tech 提供的 BenchMark 中，在 WordPress、Joomla、OpenCart、ModSecurity、小型静态文件、HTTP/2、HTTP/3 的测试上都比 Apache HTTPD 和 Nginx 有这更好的表现，这不仅仅是跑个 Hello World 而是进行一个完整的测试。")]),a._v(" "),s("p",[a._v("这是 "),s("a",{attrs:{href:"https://github.com/litespeedtech",target:"_blank",rel:"noopener noreferrer"}},[a._v("litespeedtech"),s("OutboundLink")],1),a._v("/"),s("strong",[s("a",{attrs:{href:"https://github.com/litespeedtech/ols-docker-env",target:"_blank",rel:"noopener noreferrer"}},[a._v("ols-docker-env"),s("OutboundLink")],1)]),a._v(" 的一个复克（Fork）。")]),a._v(" "),s("h1",{attrs:{id:"安装环境"}},[a._v("安装环境")]),a._v(" "),s("h2",{attrs:{id:"国内服务器准备环境"}},[a._v("国内服务器准备环境")]),a._v(" "),s("p",[a._v("一、安装 Docker 环境，已有可以跳过")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-sSL")]),a._v(" https://get.daocloud.io/docker "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sh")]),a._v("   \n")])])]),s("p",[a._v("二、安装 Docker-Compose 环境，其中"),s("code",[a._v("1.25.3")]),a._v("  可以根据 "),s("a",{attrs:{href:"https://github.com/docker/compose/releases",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[a._v("最新版本")]),s("OutboundLink")],1),a._v(" 修改，已有可以跳过")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-L")]),a._v(" https://get.daocloud.io/docker/compose/releases/download/1.25.3/docker-compose-"),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("uname")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-s")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")])]),a._v("-"),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("uname")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-m")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" /usr/local/bin/docker-compose\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("chmod")]),a._v(" +x /usr/local/bin/docker-compose\n")])])]),s("p",[a._v("三、下载 OLStack")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## 没有下载 git 的可以通过 apt install git -y 或者 yum install git -y 安装")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clone https://gitee.com/LLStack/OLStack.git\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" OLStack\n")])])]),s("h2",{attrs:{id:"海外服务器准备环境"}},[a._v("海外服务器准备环境")]),a._v(" "),s("p",[a._v("一、安装 Docker 环境，已有可以跳过")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-s")]),a._v(" https://get.docker.com "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sh")]),a._v("\n")])])]),s("p",[a._v("二、安装 Docker-Compose 环境，其中"),s("code",[a._v("1.25.4")]),a._v("  可以根据 "),s("a",{attrs:{href:"https://github.com/docker/compose/releases",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[a._v("最新版本")]),s("OutboundLink")],1),a._v(" 修改，已有可以跳过")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-L")]),a._v(" https://github.com/docker/compose/releases/download/1.25.4/docker-compose-"),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("uname")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-s")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")])]),a._v("-"),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("uname")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-m")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" /usr/local/bin/docker-compose\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("chmod")]),a._v(" +x /usr/local/bin/docker-compose\n")])])]),s("p",[a._v("三、下载 OLStack")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## 没有下载 git 的可以通过 apt install git -y 或者 yum install git -y 安装")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clone https://github.com/LLStack/OLStack.git\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" OLStack\n")])])]),s("h2",{attrs:{id:"编辑配置文件"}},[a._v("编辑配置文件")]),a._v(" "),s("p",[a._v("四、编辑 "),s("code",[a._v(".env")]),a._v(" 和 "),s("code",[a._v("docker-compose.yml")]),a._v("文件：")]),a._v(" "),s("p",[s("code",[a._v(".env")]),a._v(" 文件包括了对一些版本的定义。 可以具体看 .env 说明解析。")]),a._v(" "),s("p",[s("code",[a._v("docker-compose.yml")]),a._v("文件则是定义具体安装什么容器组件，包括 Redis、phpmyadmin 等。 可以具体看 docker-compose.yml 解析。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("vi")]),a._v(" .env\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("vi")]),a._v(" docker-compose.yml\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[a._v("提示")]),a._v(" "),s("p",[a._v("不会 vi 的同学，可以用 FileZilla、XFTP 这类的支持 SFTP 协议的软件，将文件下载后编辑再上传。")])]),a._v(" "),s("p",[a._v("五、 启动容器")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker-compose")]),a._v(" up "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v("\n")])])]),s("p",[a._v("六、 启动说明：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker-compose")]),a._v(" up "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## 临时启动所有容器")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker-compose")]),a._v(" up "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## 持久化启动所有容器")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker-compose")]),a._v(" stop "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## 停止容器运行")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker-compose")]),a._v(" down "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## 停止和删除所有容器")]),a._v("\n")])])]),s("h1",{attrs:{id:"配置说明"}},[a._v("配置说明")]),a._v(" "),s("h2",{attrs:{id:"env配置"}},[a._v(".ENV配置")]),a._v(" "),s("p",[s("code",[a._v(".env")]),a._v(" 文件包括了对一些版本的定义，由于是 "),s("code",[a._v(".")]),a._v(" 开头的文件，可能在部分电脑显示中是隐藏的，所以需要开放显示隐藏的文件。")]),a._v(" "),s("p",[s("strong",[a._v("说明如下：")])]),a._v(" "),s("p",[s("strong",[a._v("一、时区设置")]),a._v("，定义所在业务的时区。默认是 "),s("code",[a._v("Asia/Shanghai")]),a._v("，例如服务的是美国东部的，则可以修改为 "),s("code",[a._v("America/New_York")]),a._v(" 纽约时间。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("TimeZone")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("Asia/Shanghai\n")])])]),s("p",[s("strong",[a._v("二、OpenLiteSpeed 版本")]),a._v("，目前 OLS 提供了 1.6.X 和 1.5.X 两个版本，未来可能提供更多的版本。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("LITESPEED")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("ols1.6.9\n")])])]),s("p",[a._v("可供修改的选项："),s("code",[a._v("ols1.6.9")]),a._v(" 、"),s("code",[a._v("ols1.5.11")]),a._v("以及以上版本，版本查看：")]),a._v(" "),s("p",[a._v("https://openlitespeed.org/release-log/")]),a._v(" "),s("p",[s("strong",[a._v("三、PHP版本")]),a._v("，由 LiteSpeed 官方提供支持的 LSPHP 版本，和很多虚拟主机使用的企业版是一样的。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("PHPVER")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("php73\n")])])]),s("p",[a._v("目前提供了："),s("code",[a._v("php74")]),a._v("、"),s("code",[a._v("php73")]),a._v("、"),s("code",[a._v("php72")]),a._v("、"),s("code",[a._v("php71")]),a._v("、"),s("code",[a._v("php70")]),a._v("、"),s("code",[a._v("php56")]),a._v("、"),s("code",[a._v("php55")]),a._v("、"),s("code",[a._v("php54")]),a._v("、"),s("code",[a._v("php53")])]),a._v(" "),s("p",[a._v("不同的 PHP 版本底层基于的 Ubuntu 版本也不一样。")]),a._v(" "),s("ul",[s("li",[a._v("php70～74 底层系统为 Ubuntu 18.04。")]),a._v(" "),s("li",[a._v("php54～56 底层系统为 Ubuntu 16.04。 "),s("strong",[a._v("PHP不受官方支持")])]),a._v(" "),s("li",[a._v("php53 底层系统为 Ubuntu 14.04。 "),s("strong",[a._v("PHP和系统均不受官方支持，仅建议测试")])])]),a._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[a._v("提示")]),a._v(" "),s("p",[a._v("PHP 每个版本的官方生命支持周期是三年，如果程序支持建议安装最新版本\n查看PHP版本支持情况：http://php.net/supported-versions.php")])]),a._v(" "),s("p",[s("strong",[a._v("四、MySQLTYPE")]),a._v("，运行数据库的类型。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("MySQLTYPE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("mariadb\n")])])]),s("p",[a._v("可供修改的选项："),s("code",[a._v("mariadb")]),a._v(" 、"),s("code",[a._v("percona")])]),a._v(" "),s("p",[a._v("MariaDB 和 Percona 更开发并且提供更多的功能选项比默认的 MySQL 好用。")]),a._v(" "),s("p",[s("strong",[a._v("五、MySQLVER")]),a._v("，数据库的具体版本。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("MySQLVER")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10.3")]),a._v("\n")])])]),s("p",[a._v("MariaDB 目前提供了："),s("code",[a._v("10.4")]),a._v(" 、"),s("code",[a._v("10.3")]),a._v("、 "),s("code",[a._v("10.2")]),a._v("  （兼容 MySQL5.7）  "),s("code",[a._v("10.1")]),a._v(" （兼容MySQL5.6）")]),a._v(" "),s("p",[a._v("Percona 目前提供了："),s("code",[a._v("8.0")]),a._v(" 、"),s("code",[a._v("5.7")]),a._v("、 "),s("code",[a._v("5.6")]),a._v("  （这个兼容关系，不说你也知道）")]),a._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[a._v("提示")]),a._v(" "),s("p",[a._v("由于 Docker 容器的便利性，大家如果需要 PostGreSQL、SQL Server、MongoDB、Elasticsearch 都可以直接修改 "),s("code",[a._v("docker-compose.yml")]),a._v("文件来进行实现的。")])]),a._v(" "),s("p",[s("strong",[a._v("六、创建的默认数据库和用户")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## 默认数据库名称")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("MYSQL_DATABASE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("llstack\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## 默认数据库 root 账号密码")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("MYSQL_ROOT_PASSWORD")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("password\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## 默认的新建用户名")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("MYSQL_USER")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("llstack\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## 默认的新建用户密码")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("MYSQL_PASSWORD")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("password\n")])])]),s("p",[s("strong",[a._v("七、REDIS_VERSION")]),a._v("，Redis的版本配置")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("REDIS_VERSION")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5.0")]),a._v("-alpine\n")])])]),s("p",[a._v("可供修改的选项："),s("code",[a._v("6.0-rc-alpine")]),a._v("、"),s("code",[a._v("5.0-alpine")]),a._v("、"),s("code",[a._v("4.0-alpine")]),a._v("、"),s("code",[a._v("3.2-alpine")]),a._v("、"),s("code",[a._v("2.8")])]),a._v(" "),s("p",[s("strong",[a._v("八、DOMAIN")]),a._v("，默认配置的域名，可以保持默认，也可以输入为自己的默认域名，建议后面新建主机。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("DOMAIN")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("localhost\n")])])]),s("h2",{attrs:{id:"docker-compose-yml-配置"}},[a._v("docker-compose.yml 配置")]),a._v(" "),s("p",[s("code",[a._v("docker-compose.yml")]),a._v(" 模板文件是使用 Docker Compose 的核心，涉及到的指令关键字也比较多。")]),a._v(" "),s("p",[a._v("如果有需要学习的同学可以查看文档："),s("strong",[s("a",{attrs:{href:"https://yeasy.gitbooks.io/docker_practice/compose/compose_file.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Compose 模板文件"),s("OutboundLink")],1)])]),a._v(" "),s("p",[a._v("这里举例几个 OLStack 的修改方案：")]),a._v(" "),s("p",[s("strong",[a._v("一、挂载目录")])]),a._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[a._v("    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("volumes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" ./config/lsws/conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("/usr/local/lsws/conf\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" ./config/lsws/admin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("/usr/local/lsws/admin/conf\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" ./bin/container"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("/usr/local/bin\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" ./sites"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("/var/www/vhosts/\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" ./acme"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("/root/.acme.sh/\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" ./logs/lsws/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("/usr/local/lsws/logs/\n")])])]),s("p",[s("code",[a._v(":")]),a._v("前的是宿主机（这台服务器）的对应目录，这里使用相对路径。"),s("code",[a._v(":")]),a._v("后的是容器主机所对应的目录，如果有其他的目录挂载需求可以修改"),s("code",[a._v("volumes:")]),a._v("进行挂载。")]),a._v(" "),s("p",[a._v("二、开放的端口**")]),a._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[a._v("    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token datetime number"}},[a._v("80:80")]),a._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" 443"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("443")]),a._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" 443"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("443/udp\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" 7080"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("7080")]),a._v("\n")])])]),s("p",[a._v("这里开放了三个TCP端口：80（HTTP）、443（HTTPS）和7080（OLS后台）。")]),a._v(" "),s("p",[a._v("还有一个UDP端口：443（QUIC、HTTP/3）")]),a._v(" "),s("p",[a._v("如果有更多的需求，可以新增新的端口。")]),a._v(" "),s("p",[a._v("安全起见，可以将"),s("code",[a._v("- 7080:7080")]),a._v(" 修改为更安全的例如："),s("code",[a._v("- 27080:7080")]),a._v(" 这样的非默认端口，减少被安全攻击的可能。")]),a._v(" "),s("p",[s("strong",[a._v("三、启动带#的功能")])]),a._v(" "),s("p",[a._v("默认绿的带 "),s("code",[a._v("#")]),a._v(" 的都是不启用的功能：")]),a._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#  phpmyadmin:")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#    image: phpmyadmin/phpmyadmin:latest")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#    container_name: phpmyadmin")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#    ports:")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v('#      - "8081:80"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#    environment:")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#      - PMA_HOST=mysql")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#      - PMA_PORT=3306")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#      - TZ=${TimeZone}")]),a._v("\n")])])]),s("p",[a._v("像 phpmyadmin、phpredisadmin、memcached 目前都是默认关闭的。 如果有需要需要去掉最前面的"),s("code",[a._v("#")]),a._v("，然后重新运行容器编排。")]),a._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[a._v("警告")]),a._v(" "),s("p",[a._v("adminer、phpmyadmin、phpredisadmin 在不使用的时候，建议关闭。")])]),a._v(" "),s("h1",{attrs:{id:"目录结构"}},[a._v("目录结构")]),a._v(" "),s("h3",{attrs:{id:"litespeed-容器"}},[a._v("LiteSpeed 容器")]),a._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[a._v("    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("volumes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" ./config/lsws/conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("/usr/local/lsws/conf  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## OLS的配置文件目录")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" ./config/lsws/admin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("/usr/local/lsws/admin/conf  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## OLS的管理控制台目录")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" ./bin/container"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("/usr/local/bin  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## 相关工具文件")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" ./sites"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("/var/www/vhosts/  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## 虚拟主机存放的位置")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" ./acme"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("/root/.acme.sh/  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## Let's Encrypt 生成的证书存放地址")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" ./logs/lsws/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("/usr/local/lsws/logs/  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("##OLS 的日志地址")]),a._v("\n")])])]),s("p",[a._v("最重要的是 "),s("code",[a._v("- ./sites:/var/www/vhosts/")]),a._v(" 和 "),s("code",[a._v("- ./logs/lsws/:/usr/local/lsws/logs/")])]),a._v(" "),s("p",[a._v("这里是一个相对路径，如果 OLStack 的目录在 "),s("code",[a._v("/home/webserver/OLStack")]),a._v(" 那么"),s("code",[a._v("./sites")]),a._v("的实际路径就是 "),s("code",[a._v("/home/webserver/OLStack/OLStack")]),a._v("。")]),a._v(" "),s("p",[a._v("如果有额外数据盘的服务器，那么建议将 OLStack 目录放在数据盘下运行。")]),a._v(" "),s("h3",{attrs:{id:"mysql-容器"}},[a._v("MySQL 容器")]),a._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[a._v("    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("volumes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"./data/mysql:/var/lib/mysql:delegated"')]),a._v("\n")])])]),s("p",[s("code",[a._v("./data/mysql")]),a._v("存放数据库物理文件的目录。")]),a._v(" "),s("p",[a._v("有自定义修改 "),s("code",[a._v("my.cnf")]),a._v(" 需求的同学，可以修改 docker-compose.yml 文件挂载对应文件。")]),a._v(" "),s("h3",{attrs:{id:"redis-server-容器"}},[a._v("Redis-Server 容器")]),a._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[a._v("    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("volumes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" ./config/redis/redis.conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("/etc/redis.conf\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" ./data/redis/data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("/data\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" ./logs/redis/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("/var/log/redis/\n")])])]),s("p",[s("code",[a._v("- ./config/redis/redis.conf:/etc/redis.conf")]),a._v(" 配置文件，有中文注释")]),a._v(" "),s("p",[s("code",[a._v("- ./data/redis/data:/data")]),a._v(" 持久化物理文件目录")]),a._v(" "),s("p",[s("code",[a._v("- ./logs/redis/:/var/log/redis/")]),a._v(" Redis-Server日志目录")]),a._v(" "),s("h1",{attrs:{id:"使用说明"}},[a._v("使用说明")]),a._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[a._v("提示")]),a._v(" "),s("p",[a._v("使用下面的命令好，首先得进入"),s("code",[a._v("OLStack")]),a._v(" 目录")])]),a._v(" "),s("h3",{attrs:{id:"修改-litespeed-webadmin-密码"}},[a._v("修改 LiteSpeed WebAdmin 密码")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("bash")]),a._v(" bin/webadmin.sh "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("your_password"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),s("p",[a._v("例如我想要修改为"),s("code",[a._v("123456")]),a._v(" 那么输入：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("bash")]),a._v(" bin/webadmin.sh "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("123456")]),a._v("\n")])])]),s("h3",{attrs:{id:"创建虚拟主机"}},[a._v("创建虚拟主机")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("bash")]),a._v(" bin/domain.sh "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-add")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("your_domain.com"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),s("p",[a._v("例如我想要创建域名为 "),s("code",[a._v("mf8.biz")]),a._v(" 的虚拟主机那么输入，自带 "),s("code",[a._v("www.")]),a._v(" 不需要重复输入：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("bash")]),a._v(" bin/domain.sh "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-add")]),a._v(" mf8.biz\n")])])]),s("h3",{attrs:{id:"删除虚拟主机"}},[a._v("删除虚拟主机")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("domain.sh "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-del")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("your_domain.com"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),s("h3",{attrs:{id:"创建数据库"}},[a._v("创建数据库")]),a._v(" "),s("p",[a._v("下面命令会自动生成用户名、密码和数据库名。使用以下内容自动生成：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("bash")]),a._v(" bin/database.sh "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-domain")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("your_domain.com"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),s("p",[a._v("用如下方式进行自定义用户名、密码和数据库名，替换"),s("code",[a._v("user_name")]),a._v("，"),s("code",[a._v("my_password")]),a._v("以及"),s("code",[a._v("database_name")]),a._v("为想要的值：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("bash")]),a._v(" bin/database.sh "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-domain")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("your_domain.com"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-user")]),a._v(" user_name "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-password")]),a._v(" my_password "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-database")]),a._v(" database_name\n")])])]),s("h3",{attrs:{id:"连接数据库"}},[a._v("连接数据库")]),a._v(" "),s("p",[a._v("正常使用数据库，在站库不分离的场景下一般数据库连接地址都是填写："),s("code",[a._v("127.0.0.1")]),a._v("或者"),s("code",[a._v("localhost")]),a._v("。")]),a._v(" "),s("p",[a._v("在 Docker 环境中，因为数据库和执行语言是分开运行的，所以并不是在同一台“服务器”当中，自然无法使用本地连接地址。我们需要使用 "),s("code",[a._v("mysql")]),a._v(" 来进行代替。")]),a._v(" "),s("h1",{attrs:{id:"使用说明-2"}},[a._v("使用说明")]),a._v(" "),s("h3",{attrs:{id:"配置ssl证书"}},[a._v("配置SSL证书")]),a._v(" "),s("p",[a._v("首先得确保相关域名的虚拟主机已经创建，并且解析已经做对。 将使用 ACME 自动创建 Let's Encrypt 免费SSL证书。")]),a._v(" "),s("h4",{attrs:{id:"安装acme"}},[a._v("安装ACME")]),a._v(" "),s("p",[a._v("仅 "),s("strong",[a._v("第一次")]),a._v(" 运行需要安装ACME，带电子邮件通知运行：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("./bin/acme.sh "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--install")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-email")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("EMAIL_ADDR"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),s("p",[a._v("例如：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("./bin/acme.sh "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--install")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-email")]),a._v(" cert@mf8.biz\n")])])]),s("p",[a._v("不需要电子邮件通知运行：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("./bin/acme.sh --install --no-email\n")])])]),s("h4",{attrs:{id:"申请证书"}},[a._v("申请证书")]),a._v(" "),s("p",[a._v("在此命令中使用根域名，不需要填写 "),s("code",[a._v("www.")]),a._v(" 会自动添加"),s("code",[a._v("www.")]),a._v("：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("./bin/acme.sh -domain <yourdomain.com>\n")])])]),s("p",[a._v("例如：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("./bin/acme.sh "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-domain")]),a._v(" mf8.biz\n")])])]),s("p",[a._v("则会自动签发"),s("code",[a._v("www.mf8.biz")]),a._v(" 和 "),s("code",[a._v("mf8.biz")]),a._v(" 两个证书")]),a._v(" "),s("h3",{attrs:{id:"更新ols版本"}},[a._v("更新OLS版本")]),a._v(" "),s("p",[a._v("要将 OpenLiteSpeed 升级到最新的稳定版本，请运行")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("bash")]),a._v(" bin/webadmin.sh "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-lsup")]),a._v("\n")])])]),s("h3",{attrs:{id:"安装waf防火墙"}},[a._v("安装WAF防火墙")]),a._v(" "),s("p",[a._v("使用 ModSecurity 实现防火墙WAF功能：")]),a._v(" "),s("p",[a._v("Web服务器上启用WAF ：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("bash")]),a._v(" bin/webadmin.sh "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-modsec")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("enable")]),a._v("\n")])])]),s("p",[a._v("Web服务器上禁用WAF ：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("bash bin/webadmin.sh -modsec disable\n")])])]),s("h3",{attrs:{id:"phpmyadmin"}},[a._v("phpMyAdmin")]),a._v(" "),s("p",[a._v("访问地址：")]),a._v(" "),s("p",[a._v("http://yourip:8080")]),a._v(" "),s("p",[a._v("http://yourip:8443")]),a._v(" "),s("p",[a._v("默认用户名是"),s("code",[a._v("root")]),a._v("，密码与您在"),s("code",[a._v(".env")]),a._v("文件中提供的密码相同。")]),a._v(" "),s("h3",{attrs:{id:"进入容器内部"}},[a._v("进入容器内部")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-it")]),a._v(" litespeed /bin/sh "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 进入 OpenLiteSpeed、PHP 容器")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-it")]),a._v(" mysql /bin/bash "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 进入 MariaDB/Percona Server容器")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-it")]),a._v(" redis /bin/sh "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 进入 Redis Server容器")]),a._v("\n")])])]),s("p",[a._v("只要定义了容器名称：container_name ，那么替换 <container_name> 为容器名称的名字即可进入。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-it")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("container_name"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" /bin/sh \n")])])]),s("h1",{attrs:{id:"容器教程"}},[a._v("容器教程")]),a._v(" "),s("h2",{attrs:{id:"docker-使用教程"}},[a._v("Docker 使用教程")]),a._v(" "),s("p",[a._v("前面 docker run 后面 "),s("code",[a._v("–name litespeed")]),a._v(" 中的 "),s("code",[a._v("litespeed")]),a._v(" 为 "),s("code",[a._v("$name")]),a._v("，其代表容器识别符，也就是 "),s("code",[a._v("$name=litespeed")]),a._v("。")]),a._v(" "),s("p",[a._v("一、定义name变量，也可以修改为 mysql、redis 等")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("litespeed\n")])])]),s("p",[a._v("二、查看容器在线状态及大小")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-as")]),a._v("\n")])])]),s("p",[a._v("三、查看容器的运行输出日志")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" logs "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$name")]),a._v("\n")])])]),s("p",[a._v("四、重新启动容器，一般在修改除端口外的配置后使用使修改生效")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" restart "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$name")]),a._v("\n")])])]),s("p",[a._v("五、停止容器的运行")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" stop "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$name")]),a._v("\n")])])]),s("p",[a._v("六、移除容器")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$name")]),a._v("\n")])])]),s("p",[a._v("七、查看 docker 容器占用 CPU，内存等信息")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" stats --no-stream\n")])])]),s("h2",{attrs:{id:"docker-compose-使用教程"}},[a._v("Docker-Compose 使用教程")]),a._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[a._v("提示")]),a._v(" "),s("p",[a._v("首先得进入有 "),s("code",[a._v("docker-compose.yml")]),a._v(" 模板文件的目录。")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker-compose")]),a._v(" up "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## 临时启动所有容器")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker-compose")]),a._v(" up "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## 持久化启动所有容器")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker-compose")]),a._v(" stop "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## 停止容器运行")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker-compose")]),a._v(" down "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## 停止和删除所有容器")]),a._v("\n")])])]),s("p",[a._v("如果修改过"),s("code",[a._v("docker-compose.yml")]),a._v("文件，则需要重新构建。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker-compose")]),a._v(" up "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--build")]),a._v("\n")])])]),s("h1",{attrs:{id:"其他链接"}},[a._v("其他链接")]),a._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/LLStack/OLStack-Dockerfiles",target:"_blank",rel:"noopener noreferrer"}},[a._v("LLStack OLStack 社区版容器镜像"),s("OutboundLink")],1)]),a._v(" "),s("p",[s("a",{attrs:{href:"https://www.mf8.biz/",target:"_blank",rel:"noopener noreferrer"}},[a._v("米饭粑"),s("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=r.exports}}]);